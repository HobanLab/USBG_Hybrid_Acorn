(38000/52)/37.5
((38000/52)/37.5)*1.24
(((38000/52)/37.5)*1.24)*4
library(hierfstat)
hierfstat
?hierfstat
setwd("C:\\Users\\eschumacher\\Documents")
nanodrop_values <- read.csv("nandrop_shz_17_60.csv")
setwd("C:\\Users\\eschumacher\\Documents")
setwd("C:/Users/eschumacher/Documents")
setwd("C:\\Users\\eschumacher\\Documents\\primer_ordering_ZAIN")
setwd("C:\\Users\\eschumacher\\Documents")
read.csv("nanodrop_shz_17_60.csv")
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
##set my working directory to my documents folder
setwd("C:\\Users\\eschumacher\\Documents")
##
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
?t.test
t.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE)
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
##now we run the t-test
t.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE)
##
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
dev.off()
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"))
dev.off()
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), title = "260/230 ratio comparisons before and after new blank")
dev.off()
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
dev.off()
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
dev.off()
##set my working directory to my documents folder
setwd("C:\\Users\\eschumacher\\Documents")
##load in nanodrop values
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
##non-parametrc
wilcox.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE, alternative = "two.sided")
sum(134
83.8
48.2
21.2)
sum(134, 83.8, 48.2, 21.2)
library(adegenet)
library(poppr)
library(hierfstat)
library(PopGenReport)
library(pegas)
?pair.ia
library(adegenet)
##
QUAC_div <- read.genepop("C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_data_files\\QUAC_genind\\garden_wild\\QUAC_garden_clean.gen", ncode = 3)
QUAC_div
QUAC_div@tab
QUAC_div@loc.fac
QUAC_div
QUAC_div@loc.n.all
summary(QUAC_div)
library(hierfstat)
allelic.richness(QUAC_div)
sum(as.numeric(QUAC_div@loc.n.all))
as.numeric(QUAC_div@loc.n.all)[1]
21/175
length(QUAC_div@loc.n.all)
allelic.richness(QUAC_div)
colMeans(allelic.richness(QUAC_div)$Ar)
library(geosphere)
geosphere
?geosphere
sessionInfo()
library(adegenet)
sessionInfo()
library(poppr)
sessionInfo()
library(hierfstat)
sessionInfo()
library(PopGenReport)
sessionInfo()
library(Demerelate)
sessionInfo()
install.packages("BChron")
install.packages("Bchron")
library(Bchron)
sessionInfo()
library(diveRsity)
library(adegenet)
library(poppr)
library(Demerelate)
#########################
#   Load Data Files     #
#########################
#set working directory to load in data files
setwd("../../QUAC_data_files")
##now read in genepop file as a genind for adegenet
QUAC_gen <- read.genepop("QUAC_adegenet_files/QUAC_allpop.gen", ncode = 3)
##load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
##rename individuals in the genind object
rownames(QUAC_gen@tab) <- QUAC_df$Ind
##create population name list and rename the populations in the genind object
QUAC_popnames <- unique(QUAC_df$Pop)
levels(QUAC_gen@pop) <- QUAC_popnames
##now read in genepop file as a genind for adegenet
QUAC_gen <- read.genepop("QUAC_adegenet_files/QUAC_allpop.gen", ncode = 3)
email_tests  <-  c('email', 'Email', 'e Mail', 'e mail', 'E-mail',
'e-mail', 'eMail', 'E-Mail', 'EMAIL')
library(tidyverse)
pattern <- "\\[\\(i?)email\\]\\"
str_detect(email_tests, pattern)
pattern <- "\\(i?)email\\"
str_detect(email_tests, pattern)
pattern <- "\\[(i?)email]\\"
str_detect(email_tests, pattern)
pattern <- "\[(i?)email]\"
pattern <- "\[\(i?)email\]\"
pattern <- "\\[\\(i?)email\\]\\"
str_detect(email_tests, pattern)
str_detect(email_tests, "\w+\")
str_detect(email_tests, "\[w+\]")
str_detect(email_tests, "\\[\\w+\\]")
str_detect(email_tests, "\\[\\email\\]")
str_detect(email_tests, "\email\")
str_detect(email_tests, "\[email\]")
str_detect(email_tests, "\[(\e)\]")
str_detect(email_tests, "\[(\w+)\]")
is.character(email_tests)
str_match(email_tests, "\[(\w+)\]")
str_match(email_tests, "\\[(\w+)\\]")
str_match(email_tests, "\\[(\\w+)\\]")
str_detect(email_tests, "\\[(\\w+)\\]")
str_detect(email_tests, "\\[(\\e)\\]")
str_detect(email_tests, "\\[(\\w+)\\]")
str_detect(email_tests, "\\[(i?)(\\w+)\\]")
str_detect(email_tests, "\\[(i?)(\\e)\\]")
str_detect(email_tests, "^e")
str_detect(email_tests, "(?)i^e")
str_detect(email_tests, "(?i)^e")
str_detect(email_tests, "(?i)^e\\")
str_detect(email_tests, "(?i)^e\\[\\(?i)mail]\\")
str_detect(email_tests, "(?i)^e\\[\\w+]\\")
str_detect(email_tests, "(?i)^e")
str_detect(email_tests, "(?i)^e\\[\\mail\\]\\")
str_detect(email_tests, "(?i)^e\[\mail\]\")
str_detect(email_tests, "(?i)^e[\mail\]\")
str_detect(email_tests, "(?i)^e\[mail\]\")
str_detect(email_tests, "(?i)^e\[mail\]")
str_detect(email_tests, "(?i)^e\\[mail\\]")
str_detect(email_tests, "(?i)^e\\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\\\s[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\\\s\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\\s\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\s\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\\s\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\\[(?i)mail\\]")
str_detect(email_tests, "(?i)^e\\[[Mm]ail\\]")
str_detect(email_tests, "(?i)^e\\.\\[[Mm]ail\\]")
str_detect(email_tests, "(?i)^e\\[[Mm]ail\\]")
str_detect(email_tests, "(?i)^e\\.\\[Mm]ail\\")
str_detect(email_tests, "(?i)^e\\.[Mm]ail\\")
str_detect(email_tests, "(?i)^e.[Mm]ail\\")
str_detect(email_tests, "(?i)^e.\\[Mm]ail")
str_detect(email_tests, "(?i)^e.[Mm]ail")
str_detect(email_tests, "(?i)^e.(?i)mail")
str_detect(email_tests, "(?i)^e.\\(?i)mail")
str_detect(email_tests, "(?i)^e\\.(?i)mail")
str_detect(email_tests, "(?i)^e.(?i)mail")
str_detect(email_tests, "(?i)^e.\[(\^e)\](?i)mail")
str_detect(email_tests, "(?i)^e.\[(\^e)\]\(?i)mail")
pattern <- pattern <- "(?i)e[\\-\\s]?mail"
pattern <- "(?i)e[\\-\\s]?mail"
str_detect(email_tests, pattern)
as.numeric("74%")
str_detect(percent_string, "[$\\%\\]")
percent_string <- "74%"
pattern <- "\\$%\\"
str_detect(percent_string, pattern)
library(sp)
sessionInfo
sessionInfo()
#list out garden data files
setwd("C:/Users/eschumacher/Documents/GitHub/USBG_Hybrid_Acorn/Analyses/Geographic_Results")
#list out garden occ files
garden_list_occ <- list.files(pattern = "_occ_df.csv$")
garden_list_occ
gsub("_.*",'', garden_list_occ[[1]])
gsub(".\\.*",'', garden_list_occ[[1]])
gsub("\\..*",'', QUoc)
gsub("\\..*",'', garden_list_occ[[1]])
gsub("\\_.*",'', garden_list_occ[[1]])
for(garden in 1:length(garden_list_occ)){
sp_df <- read.csv(garden_list_occ[[garden]])
species_list <- unique(sp_df$Species_Name)
for(sp in 1:length(species_list)){
garden_species_df <- matrix(nrow = length(species_list), ncol = 1)
garden_species_df[sp,1] <- length(sp_df[sp_df$Species_Name == species_list[[sp]],][,1])
rownames(garden_species_df) <- species_list
write.csv(garden_species_df, paste0(gsub("\\_.*",'', garden_list_occ[[garden]]), "_species_df.csv"))
}
}
sp_df[sp_df$Species_Name == species_list[[sp]],]
sp_df[sp_df$Species_Name == species_list[[sp]],][,1]
length(sp_df[sp_df$Species_Name == species_list[[sp]],][,1])
for(sp in 1:length(species_list)){
garden_species_df <- matrix(nrow = length(species_list), ncol = 1)
garden_species_df[sp,1] <- length(sp_df[sp_df$Species_Name == species_list[[sp]],][,1])
rownames(garden_species_df) <- species_list
write.csv(garden_species_df, paste0(gsub("\\_.*",'', garden_list_occ[[garden]]), "_species_df.csv"))
}
sp_df[sp_df$Species_Name == species_list[[sp]],]
for(garden in 1:length(garden_list_occ)){
sp_df <- read.csv(garden_list_occ[[garden]])
species_list <- unique(sp_df$Species_Name)
for(sp in 1:length(species_list)){
garden_species_df <- matrix(nrow = length(species_list), ncol = 1)
garden_species_df[sp,1] <- length(sp_df[sp_df$Species_Name == species_list[[sp]],][,1])
rownames(garden_species_df) <- species_list
write.csv(garden_species_df, paste0(gsub("\\..*",'', garden_list_occ[[garden]]), "_species_df.csv"))
}
}
for(sp in 1:length(species_list)){
garden_species_df[sp,1] <- length(sp_df[sp_df$Species_Name == species_list[[sp]],][,1])
#write.csv(garden_species_df, paste0(gsub("\\..*",'', garden_list_occ[[garden]]), "_species_df.csv"))
}
View(garden_species_df)
sort(garden_species_df)
sort(garden_species_df[,1])
for(garden in 1:length(garden_list_occ)){
sp_df <- read.csv(garden_list_occ[[garden]])
species_list <- unique(sp_df$Species_Name)
garden_species_df <- matrix(nrow = length(species_list), ncol = 1)
rownames(garden_species_df) <- species_list
for(sp in 1:length(species_list)){
garden_species_df[sp,1] <- length(sp_df[sp_df$Species_Name == species_list[[sp]],][,1])
write.csv(garden_species_df, paste0(gsub("\\..*",'', garden_list_occ[[garden]]), "_species_df.csv"))
}
}
